diff -ruN include.orig/ocppi/runtime/config/types/Config.hpp include/ocppi/runtime/config/types/Config.hpp
--- include.orig/ocppi/runtime/config/types/Config.hpp	2023-08-30 16:57:03.490645126 +0800
+++ include/ocppi/runtime/config/types/Config.hpp	2023-08-30 16:57:06.030632249 +0800
@@ -54,7 +54,7 @@
 std::optional<std::string> domainname;
 std::optional<Hooks> hooks;
 std::optional<std::string> hostname;
-std::optional<Linux> linux;
+std::optional<Linux> linux_;
 std::optional<std::vector<Mount>> mounts;
 std::string ociVersion;
 std::optional<Process> process;
diff -ruN include.orig/ocppi/runtime/config/types/Generators.hpp include/ocppi/runtime/config/types/Generators.hpp
--- include.orig/ocppi/runtime/config/types/Generators.hpp	2023-08-30 16:57:03.490645126 +0800
+++ include/ocppi/runtime/config/types/Generators.hpp	2023-08-30 16:57:06.434630224 +0800
@@ -683,7 +683,7 @@
 x.network = get_stack_optional<ResourcesNetwork>(j, "network");
 x.pids = get_stack_optional<Pids>(j, "pids");
 x.rdma = get_stack_optional<std::map<std::string, Rdma>>(j, "rdma");
-x.unified = get_stack_optional<std::map<std::string, nlohmann::json>>(j, "unified");
+x.unified = get_stack_optional<std::map<std::string, std::string>>(j, "unified");
 }
 
 inline void to_json(json & j, const LinuxResources & x) {
@@ -829,7 +829,7 @@
 x.resources = get_stack_optional<LinuxResources>(j, "resources");
 x.rootfsPropagation = get_stack_optional<RootfsPropagation>(j, "rootfsPropagation");
 x.seccomp = get_stack_optional<Seccomp>(j, "seccomp");
-x.sysctl = get_stack_optional<std::map<std::string, nlohmann::json>>(j, "sysctl");
+x.sysctl = get_stack_optional<std::map<std::string, std::string>>(j, "sysctl");
 x.timeOffsets = get_stack_optional<TimeOffsets>(j, "timeOffsets");
 x.uidMappings = get_stack_optional<std::vector<IdMapping>>(j, "uidMappings");
 }
@@ -1461,7 +1461,7 @@
 x.domainname = get_stack_optional<std::string>(j, "domainname");
 x.hooks = get_stack_optional<Hooks>(j, "hooks");
 x.hostname = get_stack_optional<std::string>(j, "hostname");
-x.linux = get_stack_optional<Linux>(j, "linux");
+x.linux_ = get_stack_optional<Linux>(j, "linux");
 x.mounts = get_stack_optional<std::vector<Mount>>(j, "mounts");
 x.ociVersion = j.at("ociVersion").get<std::string>();
 x.process = get_stack_optional<Process>(j, "process");
@@ -1486,8 +1486,8 @@
 if (x.hostname) {
 j["hostname"] = x.hostname;
 }
-if (x.linux) {
-j["linux"] = x.linux;
+if (x.linux_) {
+j["linux"] = x.linux_;
 }
 if (x.mounts) {
 j["mounts"] = x.mounts;
diff -ruN include.orig/ocppi/runtime/config/types/Linux.hpp include/ocppi/runtime/config/types/Linux.hpp
--- include.orig/ocppi/runtime/config/types/Linux.hpp	2023-08-30 16:57:03.490645126 +0800
+++ include/ocppi/runtime/config/types/Linux.hpp	2023-08-30 16:57:06.762628581 +0800
@@ -62,7 +62,7 @@
 std::optional<LinuxResources> resources;
 std::optional<RootfsPropagation> rootfsPropagation;
 std::optional<Seccomp> seccomp;
-std::optional<std::map<std::string, nlohmann::json>> sysctl;
+std::optional<std::map<std::string, std::string>> sysctl;
 std::optional<TimeOffsets> timeOffsets;
 std::optional<std::vector<IdMapping>> uidMappings;
 };
diff -ruN include.orig/ocppi/runtime/config/types/LinuxResources.hpp include/ocppi/runtime/config/types/LinuxResources.hpp
--- include.orig/ocppi/runtime/config/types/LinuxResources.hpp	2023-08-30 16:57:03.490645126 +0800
+++ include/ocppi/runtime/config/types/LinuxResources.hpp	2023-08-30 16:57:07.186626463 +0800
@@ -50,7 +50,7 @@
 std::optional<ResourcesNetwork> network;
 std::optional<Pids> pids;
 std::optional<std::map<std::string, Rdma>> rdma;
-std::optional<std::map<std::string, nlohmann::json>> unified;
+std::optional<std::map<std::string, std::string>> unified;
 };
 }
 }
