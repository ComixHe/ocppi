// Thish file is generated by /tools/codegen powered by quicktype.
// DO NOT EDIT IT.

// clang-format off

//  To parse this JSON data, first install
//
//      json.hpp  https://github.com/nlohmann/json
//
//  Then include this file, and then do
//
//     LinuxResources.hpp data = nlohmann::json::parse(jsonString);

#pragma once

#include <optional>
#include <nlohmann/json.hpp>
#include <ocppi/runtime/config/helper.hpp>

#include <ocppi/runtime/config/BlockIO.hpp>
#include <ocppi/runtime/config/PurpleCPU.hpp>
#include <ocppi/runtime/config/PurpleMemory.hpp>
#include <ocppi/runtime/config/ResourcesNetwork.hpp>
#include <ocppi/runtime/config/Pids.hpp>

namespace ocppi {
namespace runtime {
namespace config {
struct DeviceCgroup;
struct HugepageLimit;
struct Rdma;
}
}
}

namespace ocppi {
namespace runtime {
namespace config {
using nlohmann::json;

struct LinuxResources {
std::optional<BlockIO> blockIO;
std::optional<PurpleCPU> cpu;
std::optional<std::vector<DeviceCgroup>> devices;
std::optional<std::vector<HugepageLimit>> hugepageLimits;
std::optional<PurpleMemory> memory;
std::optional<ResourcesNetwork> network;
std::optional<Pids> pids;
std::optional<std::map<std::string, Rdma>> rdma;
std::optional<std::map<std::string, std::string>> unified;
};
}
}
}

// clang-format on
